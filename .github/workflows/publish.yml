# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish

on:
  push:
    branches:
      - "feature/**"
#    tags:
#      - 'v[0-9]+.[0-9]+.[0-9]+'


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - name: Install gpg secret key
      run: |
         # Install gpg secret key
         cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
         # Verify gpg secret key
         gpg --list-secret-keys --keyid-format LONG

    - name: Build with Gradle Wrapper
      run: |
         export GPG_KEY_FINGERPRINT=${{ secrets.OSSRH_GPG_FINGERPRINT }}
         export GPG_SIGNING_PASSPHRASE=${{ secrets.OSSRH_GPG_SIGNING_PASSPHRASE }} 
         ./gradlew_gpg ${{ secrets.OSSRH_GPG_FINGERPRINT }} build